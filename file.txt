curl -L --output /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64
sudo chmod +x /usr/local/bin/gitlab-runner

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout — скачать код
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Python — выбрать версию Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # 3. Install — установка зависимостей
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # 4. Tests — запуск pytest
      - name: Run tests
        run: |
          pytest
_______________________
  build-package:
    runs-on: ubuntu-latest
    needs: build-and-test # Этот джоб зависит от успеха джоба 'build-and-test'
    # Условие: запускать только для пуша в main, а не для pull_request
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      # 5. Build — сборка пакета в форматах sdist и wheel
      - name: Build package
        run: |
          python setup.py sdist bdist_wheel
        # Команда создаст два файла в папке dist/:
        # - Исходный код (.tar.gz)
        # - Бинарный wheel-пакет (.whl)

      # 6. Upload — сохранение собранных пакетов как артефакт GitHub Actions
      - name: Upload package artifacts
        uses: actions/upload-artifact@v3
        with:
          name: python-package
          path: dist/
          # Артефакты будут доступны для скачивания на странице workflow run в GitHub
          # Их также можно будет использовать в последующих джобах (например, для деплоя)
________________________
setup.py
from setuptools import setup, find_packages

setup(
    name="your-project-name",  # Замените на имя вашего проекта
    version="0.1.0",
    author="Your Name",
    author_email="your.email@example.com",
    description="A short description of your project",
    packages=find_packages(),
    classifiers=[
        "Programming Language :: Python :: 3",
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
    ],
    python_requires='>=3.6',
)
________________________
name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run tests
        run: pytest


stages:
  - test

pytest:
  stage: test
  before_script:
    - python3 -m pip install --upgrade pip
    - if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  script:
    - pytest
______________________
# CD часть - сборка пакета (новый этап)
build-package:
  stage: build
  needs: ["pytest"]  # Запустится только если pytest прошел успешно
  before_script:
    - python3 -m pip install --upgrade pip
    - pip install setuptools wheel build
  script:
    - python -m build  # Сборка пакета
  artifacts:
    paths:
      - dist/  # Сохраняем собранные пакеты как артефакты
    expire_in: 1 week  # Артефакты хранятся 1 неделю
_____________________


wget https://gitlab-runner-downloads.s3.amazonaws.com/v14.10.1/binaries/gitlab-runner-linux-amd64 -O gitlab-runner
chmod +x gitlab-runner
./gitlab-runner --version


stages:
  - build
  - test

build-job:
  stage: build
  script:
    - echo "Устанавливаем зависимости"
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install --upgrade pip
    - if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

test-job:
  stage: test
  script:
    - echo "Запускаем pytest"
    - source venv/bin/activate
    - pip install pytest
    - pytest
_______________________
github
name: CI_CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run tests
        run: |
          pytest

  build-package:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel

      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: dist/
_______________________________
gitlab
stages:
  - test
  - build

pytest:
  stage: test
  before_script:
    - python3 -m pip install --upgrade pip
    - if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  script:
    - echo "Запускаем тесты"
    - pytest

build-package:
  stage: build
  needs: ["pytest"]
  before_script:
    - python3 -m pip install --upgrade pip
    - pip install setuptools wheel build
  script:
    - python -m build
  artifacts:
    paths:
      - dist/
    expire_in: 1 week
